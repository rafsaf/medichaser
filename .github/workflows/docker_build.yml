name: docker_build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created

permissions:
  actions: write
  contents: read

jobs:
  docker_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: linux/amd64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: rafsaf/medichaser

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Cache
        uses: actions/cache@v4
        id: cache
        with:
          path: cache-mount
          key: cache-mount-${{ runner.os }}-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            cache-mount-${{ runner.os }}-

      - name: Restore Docker cache mounts
        uses: reproducible-containers/buildkit-cache-dance@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-dir: cache-mount
          dockerfile: Dockerfile
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Build medichaser image
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: app
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64

      - name: Run tests if on branch
        if: github.event_name == 'pull_request'
        run: |
          docker compose -f docker-compose.tests.yml run --rm medichaser_tests
